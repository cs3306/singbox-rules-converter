name: Update SingBox Rules

on:
  schedule:
    - cron: '0 0 * * *'  # 每天运行一次
  workflow_dispatch:     # 允许手动触发

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          
      - name: Install SingBox CLI
        run: |
          go install -v github.com/sagernet/sing-box/cmd/sing-box@latest
          
      - name: Install Python dependencies
        run: |
          pip install pyyaml
          
      - name: Clone source repositories
        run: |
          # 克隆 ACL4SSR 仓库（指定master分支）
          git clone --depth 1 -b master https://github.com/ACL4SSR/ACL4SSR.git temp/ACL4SSR
          
          # 克隆 blackmatrix7 仓库
          git clone --depth 1 https://github.com/blackmatrix7/ios_rule_script.git temp/blackmatrix7
      
      - name: Convert ACL4SSR rules
        run: |
          mkdir -p output
          # 转换ACL4SSR Clash规则
          python3 converter.py temp/ACL4SSR/Clash/Providers/Ruleset output acl4ssr-ruleset
          python3 converter.py temp/ACL4SSR/Clash/Providers output acl4ssr-providers
          python3 converter.py temp/ACL4SSR/Clash output acl4ssr
          
      - name: Convert BlackMatrix7 rules
        run: |
          # 转换BlackMatrix7 Clash规则
          python3 converter.py temp/blackmatrix7/rule/Clash output blackmatrix7
          
      - name: Compile rule sets
        run: |
          bash compile.sh
          
      - name: Create base README
        run: |
          cat > README.md << EOL
          # SingBox Rules

          这个仓库包含了从常用的Clash规则源自动转换生成的SingBox规则集。

          ## 规则来源

          - [ACL4SSR/ACL4SSR](https://github.com/ACL4SSR/ACL4SSR) (master分支)
          - [blackmatrix7/ios_rule_script](https://github.com/blackmatrix7/ios_rule_script)

          ## 致谢

          本项目使用了以下开源项目的代码：
          - [singbox_ruleset](https://github.com/senshinya/singbox_ruleset) - 提供了规则集转换功能的基础实现

          ## 使用方法
          
          在SingBox配置中添加规则集：
          
          \`\`\`json
          {
            "route": {
              "rule_set": [
                {
                  "tag": "规则名称",
                  "type": "remote",
                  "format": "binary",
                  "url": "https://raw.githubusercontent.com/cs3306/singbox-rules-converter/main/output/来源/规则类别/规则名称.srs",
                  "download_detour": "proxy"
                }
              ],
              "rules": [
                {
                  "rule_set": ["规则名称"],
                  "outbound": "proxy或direct或block"
                }
              ]
            }
          }
          \`\`\`
          ## 自动更新
          
          规则每天自动更新一次。也可以手动触发GitHub Actions工作流来更新规则。
          
          ## SingBox规则集格式说明
          
          singbox的规则集格式与路由规则不同，规则集使用以下格式：
          
          \`\`\`json
          {
            "version": 2,
            "rules": [
              {
                "domain": ["example.com"],
                "domain_suffix": ["example.org"],
                "domain_keyword": ["keyword"],
                "ip_cidr": ["192.168.1.0/24"]
              }
            ]
          }
          \`\`\`
          在路由配置中使用规则集时，才指定出站策略：
          \`\`\`json
          {
            "rules": [
              {
                "rule_set": ["规则名称"],
                "outbound": "proxy"
              }
            ]
          }
          \`\`\`
          EOL
      
      - name: Update README with rule lists
        run: |
          # 更新README中当前可用的规则列表
          echo -e "\n## 可用规则列表\n" >> README.md
          
          # ACL4SSR Ruleset 规则
          echo -e "\n### ACL4SSR Ruleset 规则\n" >> README.md
          find output/acl4ssr-ruleset -type f -name "*.srs" 2>/dev/null | sort | while read -r file; do
            rel_path=$(realpath --relative-to=output "$file")
            echo "- [$rel_path](https://raw.githubusercontent.com/cs3306/singbox-rules-converter/main/output/$rel_path)" >> README.md
          done
          
          # ACL4SSR Providers 规则
          echo -e "\n### ACL4SSR Providers 规则\n" >> README.md
          find output/acl4ssr-providers -type f -name "*.srs" 2>/dev/null | sort | while read -r file; do
            rel_path=$(realpath --relative-to=output "$file")
            echo "- [$rel_path](https://raw.githubusercontent.com/cs3306/singbox-rules-converter/main/output/$rel_path)" >> README.md
          done
          
          # ACL4SSR 其他规则
          echo -e "\n### ACL4SSR 其他规则\n" >> README.md
          find output/acl4ssr -type f -name "*.srs" 2>/dev/null | sort | while read -r file; do
            rel_path=$(realpath --relative-to=output "$file")
            echo "- [$rel_path](https://raw.githubusercontent.com/cs3306/singbox-rules-converter/main/output/$rel_path)" >> README.md
          done
          
          # BlackMatrix7 规则
          echo -e "\n### BlackMatrix7 规则\n" >> README.md
          find output/blackmatrix7 -type f -name "*.srs" 2>/dev/null | sort | while read -r file; do
            rel_path=$(realpath --relative-to=output "$file")
            echo "- [$rel_path](https://raw.githubusercontent.com/cs3306/singbox-rules-converter/main/output/$rel_path)" >> README.md
          done
          
      - name: Commit and push changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git add output/ README.md
          
          # 检查是否有变更需要提交
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git commit -m "Update SingBox rules [automated]"
          git push
